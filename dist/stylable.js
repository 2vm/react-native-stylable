Object.defineProperty(exports, "__esModule", { value: true }); var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); exports.default = stylable; var _propTypes = require('prop-types'); var _propTypes2 = _interopRequireDefault(_propTypes); var _react = require('react'); var _react2 = _interopRequireDefault(_react); var _hoistNonReactStatics = require('hoist-non-react-statics'); var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics); var _node = require('./node'); var _node2 = _interopRequireDefault(_node); var _isPureComponent = require('./isPureComponent'); var _isPureComponent2 = _interopRequireDefault(_isPureComponent); var _getDisplayName = require('./getDisplayName'); var _getDisplayName2 = _interopRequireDefault(_getDisplayName); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } } function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; } function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } function stylable(selName) { return function wrapWithComponent(WrappedComponent) { var _class, _temp; var stylableDisplayName = 'Stylable(' + selName + ')(' + (0, _getDisplayName2.default)(WrappedComponent) + ')'; var pureComponent = (0, _isPureComponent2.default)(WrappedComponent); var isHostComponent = typeof WrappedComponent === 'string'; var Stylable = (_temp = _class = function (_React$Component) { _inherits(Stylable, _React$Component); function Stylable(props, ctx) { _classCallCheck(this, Stylable); var _this = _possibleConstructorReturn(this, (Stylable.__proto__ || Object.getPrototypeOf(Stylable)).call(this, props, ctx)); _this.nodeChanged = function () { _this.setState({ childProps: _this.node.getChildProps() }); }; _this._setWrappedRef = function (el) { _this._wrapped = el; }; _this.node = new _node2.default(selName, props, ctx.styleNode, ctx.styleSheet); _this.state = { childProps: _this.node.getChildProps() }; _this._wrapped = undefined; return _this; } _createClass(Stylable, [{ key: 'componentWillReceiveProps', value: function componentWillReceiveProps(nextProps) { this.node.setProps(nextProps); } }, { key: 'componentDidMount', value: function componentDidMount() { this.node.subscribe(this.nodeChanged); } }, { key: 'componentWillUnmount', value: function componentWillUnmount() { this.node.dispose(); } }, { key: 'getChildContext', value: function getChildContext() { return { styleNode: this.node }; } }]); return Stylable; }(_react2.default.Component), _class.name = selName, _class.displayName = stylableDisplayName, _class.WrappedComponent = WrappedComponent, _class.contextTypes = { styleSheet: _propTypes2.default.object.isRequired, styleNode: _propTypes2.default.object }, _class.childContextTypes = { styleNode: _propTypes2.default.object.isRequired }, _class.propTypes = { variant: _propTypes2.default.any }, _temp); function stylablePureRender() { return _react2.default.createElement(WrappedComponent, this.state.childProps); } function stylableRender() { return _react2.default.createElement(WrappedComponent, _extends({}, this.state.childProps, { ref: this._setWrappedRef })); } if (pureComponent) { Stylable.prototype.render = stylablePureRender; } else { Stylable.prototype.render = stylableRender; } if (!WrappedComponent.$$typeof && (isHostComponent || typeof WrappedComponent.prototype.setNativeProps === 'function')) { Stylable.prototype.setNativeProps = function (props) { this._wrapped && this._wrapped.setNativeProps(props); }; } return (0, _hoistNonReactStatics2.default)(Stylable, WrappedComponent); }; }
